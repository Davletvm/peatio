= render layout: 'doc_layout' do 
  .docs-cnt
    h2 偿付能力验证

    h3 1. 关于资产证明

    p 资产证明是由交易所向用户提供的，表明自己持有一定数额资产的证据。也有人把资产证明称做100%准备金证明（proof of reserve），或者偿付力证明（proof of solvency）。它意味着我们将保管用户在云币的所有资产，而不能将其中的任何一部分用于任何事情（放贷等）。100%准备金率就是用户存100块，平台必须保留100块；10%准备金率就是存100块，平台可以只保留10块，另外的90块可以做别的事情。

    h3 2. 资产证明的作用

    p 如果交易所能够证明自己始终持有足够数额，比如大于等于全体用户存款总额的资产，用户便有理由相信自己在任何时候都能顺利的取回自己存放在交易所的资产（提现）。

    p 一次又一次发生的比特币交易所丑闻，例如交易所挪用用户资产最后亏损跑路，又如近期Mt.Gox的倒闭，使得越来越多的人们认识到交易所资产透明的重要性。

    h3 3. 资产证明应该包括什么？

    p 完备的资产证明应该提供两个数字，并且证明这两个数字真实有效：

    ul
      li a. 交易所当前可支配的资金（proof of assets） 
      li b. 所有用户存入交易所的资金总和（proof of liabilities）

    p 当a大于等于b (a/b >= 100%) 时，即使交易所所有用户同时提现，交易所也有足够的资金满足。

    p 传统机构通过第三方审计来证实各种数字的真实性，数字的可信度与第三方审计机构的可信度挂钩，谁又来证明第三方审计机构的可信度呢？将审计的权利集中到少数审计机构手上的弊端显而易见，在比特币的自由环境中尤甚。比特币社区提出了更好的方法，既不需要第三方参与，又能够证明数字的真实性。

    h3 4. 如何证明交易所可支配资金数额？

    p 对于比特币资产，交易所首先需要公布钱包地址，任何人都能够通过查询工具得知该地址（或者数个地址）中当前的比特币数量，这个数量便是交易所拥有的比特币资金总额。

    p 接下来交易所只需再公开一条签名消息（signmessage），就可以证明自己是上述钱包地址的拥有者，这样便完成了可支配比特币资金的证明。

    p 对于法币资金，方法不一而足。云币网已经公开了交易所人民币银行账户和查询密码，任何用户都可以通过查询银行账户的方式得知云币网当前的人民币资金数额。

    h3 5. 如何证明用户存入交易所的资金总额？

    p 最简单的方法是公开所有用户账户，将所有账户资金数额相加得到用户存款总额。由于每个用户都能够确认自己的账户被包含在交易所公布的全体用户数据中，因此可以确定交易所没有漏报用户数据造假。

    p 这种方法的缺点也很明显：用户隐私被公开，所以很少被真正采用。目前比特币社区获得最广泛关注的是另一种叫做Merkle Approach的方案，也是云币网采用的方案。

    p 对于每一位云币网用户，交易所会提供两段数据：一段叫做root.json，包含了交易所的用户存款总额和验证码（hash code）；一段叫做partial_tree.json，包含了该用户自己的存款数据，验算所需的存款数据，以及这些数据的验证码（同样也是hash code）。当用户将这两段数据提交给验证工具时，验证工具会根据特定算法，从partial_tree.json中计算出交易所应当拥有的用户存款总额，以及对应的验证码，当计算出的总额和验证码与root.json中包含的数据相等时，用户便可确认交易所公布的总额数据确实包含了自己的存款，换句话说，交易所没有通过漏掉自己的账户伪造存款总额数据（使得公布数额比实际数额更小）。

    p 由于有足够多的用户会进行验证，用户便有理由相信，交易所存款总额数据包含了所有用户的账户，也就是说交易所存款总额确实是所有用户存款之和。

    p 更详细的说明以及证明，可参考：https://iwilcox.me.uk/2014/proving-bitcoin-reserves

    h3 6. 现在有哪些验证工具？

    ul
      li 
        strong Proof of liability在线工具 http://olalonde.github.io/proof-of-liabilities

        p 这是Merkle Approach标准（草案）作者提供的一个在线验证工具，用户在提交数据后只要点击按钮即可得到验证结果。

        p 该项目源代码地址：https://github.com/olalonde/proof-of-liabilities

      li 
        strong Peatio/liability-proof https://github.com/peatio/liability-proof

        p 这是云币开源团队用ruby实现的一个工具，可在命令行环境下使用（需要ruby运行环境）。

      li
        strong PoLtree https://github.com/zw/PoLtree/

        p Merkle Approach标准（草案）的另一参与制定者Zac提供的Clojure实现。

    p 以上三种验证工具都可验证符合此格式的数据：https://github.com/olalonde/proof-of-liabilities#serialized-data-formats-work-in-progress--draft

    p 由于验证算法是完全公开的，有兴趣的用户完全也可以手工计算来验证。